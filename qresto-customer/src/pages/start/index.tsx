import Head from 'next/head'
import {useState, useEffect} from 'react';
import { useRouter } from 'next/router'
import { NameInputMain } from '@/Customer/NameInput/NameInputMain'
import { postCustomer } from '@/requests'
import {MessageDialog} from '@/Common/MessageDialog'
import { useSearchParams} from 'next/navigation'
import {getCookie, hasCookie, setCookie} from "cookies-next";

export default function startPage() {
    const router = useRouter()
    const [openRepeatedNameDialog, setOpenRepeatedNameDialog] = useState(false)
    const [openEmptyNameDialog, setOpenEmptyNameDialog] = useState(false)
    const searchParams = useSearchParams()
    const [tableCode, setTableCode] = useState('')


    useEffect(() => {
        if (!hasCookie("tableCode")) {
            router.replace({pathname: "/"})
        } else {
            const tcCookie = getCookie("tableCode")
            setTableCode(tcCookie)
        }


/*        const tc = searchParams.get('table-code')
        setTableCode(tc)
*/

    }, [searchParams])

    const onEnterName = async (name) => {
        if(name === ''){
            setOpenEmptyNameDialog(true)
        } else {
            const result = await postCustomer(name, tableCode)
            setOpenRepeatedNameDialog(!result)
            if(result){

                // Set cookies for name and tableCode
                setCookie("customerName", name, {maxAge:60*60*5})
                setCookie("tableCode", tableCode, {maxAge:60*60*5})

                router.replace({
                    pathname: "/menucategories",
                    query: {
                        customer: name
                    }
                })
            }
        }
    }


    return (<>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
            <NameInputMain onClick={onEnterName}/>
            <MessageDialog
                open={openRepeatedNameDialog}
                title='Nombre repetido'
                onSubmit={() => setOpenRepeatedNameDialog(false)}
                submitButtonText={"Aceptar"}
                cancelButtonVisible={false}
                description={'El nombre ingresado ya está en uso en esta mesa. Por favor, cambialo agregando tu apellido, o colocando o agregando algún número o letra'}/>

            <MessageDialog
                open={openEmptyNameDialog}
                title='Ingrese un nombre'
                onSubmit={() => setOpenEmptyNameDialog(false)}
                cancelButtonVisible={false}
                submitButtonText={"Aceptar"}
                description={'Debe ingresar un nombre para poder realizar una orden'}/>
        </main>
    </>)
}

